{
  "courses": [
    {
      "id": 1,
      "full_name": "Introduction to Computing and Programming Concepts",
      "course_id": "CSCI-1133",
      "course_description": "Fundamental programming concepts using Python language. Problem solving skills, recursion, object-oriented programming. Algorithm development techniques. Use of abstractions/modularity. Data structures/abstract data types. Develop programs to solve real-world problems.",
      "technology_used": "Python,Excel",
      "is_csci_course": true,
      "projects":["tamogatchi","CSV data analysis","disease spread simulator"],
      "my_description":"This course sparked my interest in programming and using programs to solve problems. From this class I learned the fundamentals of programming with Python and I also learned how to solve problems with scripts in general."
    },
    {
      "id": 2,
      "full_name": "Introduction to Algorithms and Data Structures",
      "course_id": "CSCI-1933",
      "course_description": "Advanced object oriented programming to implement abstract data types (stacks, queues, linked lists, hash tables, binary trees) using Java language. Inheritance. Searching/sorting algorithms. Basic algorithmic analysis. Use of software development tools",
      "technology_used": "Java,OOP,DSA",
      "is_csci_course": true,
      "projects":["Card Games","Polynomial Arithmetic","Efficient Anagram Finder"],
      "my_description": "This course introduced me to building and implementing data structures in order to create more efficient algorithms. From this class I also gained exposure to concepts such as pointers, big O notation, and algorithms with searching and sorting."
    },
    {
      "id": 3,
      "full_name": "Discrete Structures of Computer Science",
      "course_id": "CSCI-2011",
      "course_description": "Foundations of discrete mathematics. Sets, sequences, functions, big-O, propositional/predicate logic, proof methods, counting methods, recursion/recurrences, relations, trees/graph fundamentals.",
      "technology_used": "Python,DSA",
      "is_csci_course": true,
      "projects": [""]
    },
    {
      "id": 4,
      "full_name": "Machine Architecture and Organization",
      "course_id": "CSCI-2021",
      "course_description": "Introduction to hardware/software components of computer system. Data representation, boolean algebra, machine-level programs, instruction set architecture, processor organization, memory hierarchy, virtual memory, compiling, linking. Programming in C.",
      "technology_used": "C,X86-64 Assembly,GDB",
      "is_csci_course": true,
      "projects":["Contacts Log System","Bitwise Puzzles and Debugging","Assembly Practice and Binary Bomb Defusal","Matrix Multiplication Optimization"]
    },
    {
      "id": 5,
      "full_name": "Elementary Computational Linear Algebra",
      "course_id": "CSCI-2033",
      "course_description": "Matrices/linear transformations, basic theory. Linear vector spaces. Inner product spaces. Systems of linear equations, Eigenvalues, singular values. Algorithms/computational matrix methods using python. Use of matrix methods to solve variety of computer science problems.",
      "technology_used": "Python,Jupyter Notebooks,Numpy",
      "is_csci_course": true,
      "projects":["Linear Algebra Applications with NumPy","KNN Implementation","Matrix Decomposition and Least Squares Approximation","Facial Recognition Using Eigenvectors"]
    },
    {
      "id": 6,
      "full_name": "Advanced Programming Principles",
      "course_id": "CSCI-2041",
      "course_description": "Principles/techniques for creating correct, robust, modular programs. Computing with symbolic data, recursion/induction, functional programming, impact of evaluation strategies, parallelism. Organizing data/computations around types. Search-based programming, concurrency, modularity.",
      "technology_used": "OCAML,LISP",
      "is_csci_course": true,
      "projects":[""]
    },
    {
      "id": 7,
      "full_name": "Advanced Programming Principles",
      "course_id": "CSCI-2041",
      "course_description": "Principles/techniques for creating correct, robust, modular programs. Computing with symbolic data, recursion/induction, functional programming, impact of evaluation strategies, parallelism. Organizing data/computations around types. Search-based programming, concurrency, modularity.",
      "technology_used": "OCAML,LISP",
      "is_csci_course": true,
      "projects": [""]
    },
    {
      "id": 8,
      "full_name": "Special Topics in Computer Science",
      "course_id": "CSCI-2980",
      "course_description": "Special topics. Lectures, informal discussions regarding discrete structures",
      "technology_used": "Python,DSA",
      "is_csci_course": true,
      "projects":[""]
    },
    {
      "id": 9,
      "full_name": "Algorithms and Data Structures",
      "course_id": "CSCI-4041",
      "course_description": "Rigorous analysis of algorithms/implementation. Algorithm analysis, sorting algorithms, binary trees, heaps, priority queues, heapsort, balanced binary search trees, AVL trees, hash tables and hashing, graphs, graph traversal, single source shortest path, minimum cost spanning trees.",
      "technology_used": "Python,Flask,DSA",
      "is_csci_course": true,
      "projects":[""]
    },
    {
      "id": 10,
      "full_name": "Introduction to Operating Systems",
      "course_id": "CSCI-4061",
      "course_description": "Processes/threads, process coordination, interprocess communication, asynchronous events, memory management/file systems. Systems programming projects using operating system interfaces and program development tools.",
      "technology_used": "C,GDB,Multi-Threading",
      "is_csci_course": true,
      "projects": ["Linux TAR System","Personal Terminal","Inter-Process Communication with Pipes","Multithreaded TCP Server / Data Retrieval"]
    }
  ]
}
